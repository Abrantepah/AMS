import{a as R}from"./@algolia-6bb98d1b.js";var f={exports:{}};const h=/[\p{Lu}]/u,x=/[\p{Ll}]/u,E=/^[\p{Lu}](?![\p{Lu}])/gu,A=/([\p{Alpha}\p{N}_]|$)/u,L=/[_.\- ]+/,m=new RegExp("^"+L.source),C=new RegExp(L.source+A.source,"gu"),p=new RegExp("\\d+"+A.source,"gu"),U=(e,s,r)=>{let c=!1,o=!1,a=!1;for(let t=0;t<e.length;t++){const l=e[t];c&&h.test(l)?(e=e.slice(0,t)+"-"+e.slice(t),c=!1,a=o,o=!0,t++):o&&a&&x.test(l)?(e=e.slice(0,t-1)+"-"+e.slice(t-1),a=o,o=!1,c=!0):(c=s(l)===l&&r(l)!==l,a=o,o=r(l)===l&&s(l)!==l)}return e},v=(e,s)=>(E.lastIndex=0,e.replace(E,r=>s(r))),N=(e,s)=>(C.lastIndex=0,p.lastIndex=0,e.replace(C,(r,c)=>s(c)).replace(p,r=>s(r))),I=(e,s)=>{if(!(typeof e=="string"||Array.isArray(e)))throw new TypeError("Expected the input to be `string | string[]`");if(s={pascalCase:!1,preserveConsecutiveUppercase:!1,...s},Array.isArray(e)?e=e.map(a=>a.trim()).filter(a=>a.length).join("-"):e=e.trim(),e.length===0)return"";const r=s.locale===!1?a=>a.toLowerCase():a=>a.toLocaleLowerCase(s.locale),c=s.locale===!1?a=>a.toUpperCase():a=>a.toLocaleUpperCase(s.locale);return e.length===1?s.pascalCase?c(e):r(e):(e!==r(e)&&(e=U(e,r,c)),e=e.replace(m,""),s.preserveConsecutiveUppercase?e=v(e,r):e=r(e),s.pascalCase&&(e=c(e.charAt(0))+e.slice(1)),N(e,c))};f.exports=I;f.exports.default=I;var S=f.exports;const w=R(S);export{w as p};
